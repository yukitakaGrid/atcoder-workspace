#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <climits>
using namespace std;


int solve(long long N, std::vector<long long> Q, std::vector<long long> A, std::vector<long long> B){
    int S_list[N];
    int min = INT_MAX;
    for(int i=0;i<N;i++){
        int max = 0;
        int ACount=0;
        while(1){
            int sum = 0;   
            //Aが0の場合Bの最大値を求めて終了
            if(A.at(i)==0){
                int BCount2=0;
                while(1){
                    sum+=BCount2*B.at(i);
                    if(sum>Q.at(i))
                        break;
                    BCount2++;
                }
            }
            else{
                //Aの時点でsumがQを超えた場合そこで終了
                sum+=ACount*A.at(i);
                if(sum>Q.at(i)){
                    break;
                }
                int BCount=0;
                while(1){
                    //Bに進んだ場合
                    //Bが0の場合終了
                    if(B.at(i)==0){
                        break;
                    }

                    sum+=BCount*B.at(i);
                    if(sum>Q.at(i)){
                        break;
                    }

                    BCount++;
                }
                //最後にAとBの合計をmaxと比較
                if(max<ACount+BCount){
                    cout << "max:" << max << endl; 
                    max=ACount+BCount;
                    S_list[i]=max;
                }
                ACount++;
            }
        }

        //最後にN個の計算した全Sの中で一番小さいSを答えにする
        for(int i=0;i<N;i++){
            if(min>S_list[i]){
                min=S_list[i];
            }
        }
    }
    return min;
}

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> Q(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &Q[i]);
    }
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    std::vector<long long> B(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &B[i]);
    }
    int ans = solve(N, std::move(Q), std::move(A), std::move(B));
    cout << ans << endl;
    return 0;
}
